{"version":3,"sources":["assets/styles/theme.js","assets/styles/GlobalStyle.js","components/pages/App/App.style.js","components/pages/Registration/Registration.style.js","components/atoms/Input/Input.style.js","components/atoms/Input/Input.js","components/atoms/Button/Button.style.js","components/atoms/Button/Button.js","components/organisms/Form/Form.style.js","components/organisms/Form/Form.js","constants/routes.js","assets/firebase/firebase.js","store/AuthContext.js","components/pages/Registration/Registration.js","components/pages/Login/Login.style.js","components/pages/Login/Login.js","components/pages/Home/Home.js","helpers/PrivateRoute.js","components/pages/App/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["theme","colors","white","mainColor","mainColorLight","lightGrey","green","red","active","black","success","error","warning","fontSize","headers","xl","l","m","s","xs","boxShadow","mainShadow","media","phone","tablet","desktop","GlobalStyle","createGlobalStyle","normalize","AppWrapper","styled","div","PageWrapper","Header","h1","LinkWrapper","Text","p","StyledLink","Link","ErrorMessage","span","ServerErrorMessage","StyledInput","input","Input","props","StyledButton","button","Button","StyledForm","form","Form","SIGNUP","SIGNIN","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","Provider","Registration","errorMessage","setErrorMessage","history","useHistory","useForm","register","handleSubmit","errors","formState","onSubmit","data","a","console","log","push","placeholder","type","required","to","Login","Home","onClick","PrivateRoute","Component","component","rest","render","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ad7b5ff9.chunk.js","sourcesContent":["export const theme = {\r\n  colors: {\r\n    white: '#FFFFFF',\r\n    mainColor: '#292B4D',\r\n    mainColorLight: '#353766',\r\n    lightGrey: '#F0F0F4',\r\n    green: '#69AB56',\r\n    red: '#C4686F',\r\n    active: '#17D1E0',\r\n    black: '#111111',\r\n    success: '#8FCB81',\r\n    error: '#CB8581',\r\n    warning: '#E1D888',\r\n  },\r\n  fontSize: {\r\n    headers: '40px',\r\n    xl: '30px',\r\n    l: '25px',\r\n    m: '22px',\r\n    s: '18px',\r\n    xs: '14px',\r\n  },\r\n  boxShadow: {\r\n    mainShadow: '0 4px 5px 0 rgba(0,0,0,0.25)'\r\n  },\r\n  media: {\r\n    phone: '@media (max-width: 600px)',\r\n    tablet: '@media (min-width: 601px)',\r\n    desktop: '@media (min-width: 992px)',\r\n  },\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\nimport 'assets/styles/font.css';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n  *, *::after, *::before {\r\n    box-sizing: inherit;\r\n  }\r\n  body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  a, button {\r\n    font-family: 'Montserrat', sans-serif;\r\n    text-decoration: none;\r\n    user-select: none;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n  h1 {\r\n    font-size: 30px;\r\n    font-weight: 400;\r\n    margin: 0;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const AppWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  color: ${({ theme }) => theme.colors.lightGrey};\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PageWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  background-color: ${({ theme }) => theme.colors.mainColor};\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-size: ${({ theme }) => theme.fontSize.headers};\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const LinkWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 300;\r\n  margin: 0;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.colors.active};\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport const ErrorMessage = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.colors.red};\r\n`;\r\n\r\nexport const ServerErrorMessage = styled.div`\r\n  width: 70%;\r\n  background-color: ${({theme}) => theme.colors.red};\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  font-size: ${({theme}) => theme.fontSize.s};\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 70%;\r\n  background-color: ${({ theme }) => theme.colors.mainColorLight};\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.colors.lightGrey};\r\n  font-size: ${({theme}) => theme.fontSize.l};\r\n  font-weight: 300;\r\n  margin: 15px 0;\r\n  box-shadow: ${({ theme }) => theme.boxShadow.mainShadow}\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledInput } from './Input.style';\r\n\r\nconst Input = (props) => {\r\n  return <StyledInput {...props} />;\r\n};\r\n\r\nInput.propTypes = {};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  margin: 20px 0;\r\n  padding: 15px 50px;\r\n  border-radius: 25px;\r\n  background-color: ${({ theme }) => theme.colors.mainColorLight};\r\n  border: none;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.colors.lightGrey};\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-weight: 200;\r\n  box-shadow: ${({ theme }) => theme.boxShadow.mainShadow};\r\n  transition: background-color 0.2s ease;\r\n  &:active {\r\n    background-color:${({ theme }) => theme.colors.active};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {StyledButton} from './Button.style';\r\n\r\nconst Button = (props) => {\r\n   \r\n    return (\r\n        <StyledButton {...props}>\r\n            \r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    \r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {StyledForm} from './Form.style';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <StyledForm {...props}>\r\n            \r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n    \r\n};\r\n\r\nexport default Form;","export const SIGNUP = '/Gym_App/signup';\r\nexport const SIGNIN = '/Gym_App/signin';\r\nexport const HOME = '/Gym_App/';","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from 'assets/firebase/firebase';\r\nimport 'firebase/auth';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  PageWrapper,\r\n  Header,\r\n  Text,\r\n  StyledLink,\r\n  LinkWrapper,\r\n  ErrorMessage,\r\n  ServerErrorMessage,\r\n} from './Registration.style';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport Form from 'components/organisms/Form/Form';\r\nimport { SIGNIN } from 'constants/routes';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from 'store/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Registration = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { signup } = useAuth();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data.email);\r\n    try {\r\n      await signup(data.email, data.password);\r\n      history.push('/');\r\n    } catch {\r\n      setErrorMessage('Ups, coś poszło nie tak :/');\r\n    }\r\n  };\r\n  return (\r\n    <PageWrapper>\r\n      <Header>Rejestracja</Header>\r\n      {errorMessage && <ServerErrorMessage>{errorMessage}</ServerErrorMessage>}\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          placeholder=\"email\"\r\n          type=\"email\"\r\n          {...register('email', { required: true })}\r\n        />\r\n        {errors.email && <ErrorMessage>pole wymagane</ErrorMessage>}\r\n        <Input\r\n          placeholder=\"hasło\"\r\n          type=\"password\"\r\n          {...register('password', { required: true })}\r\n        />\r\n        {errors.password && <ErrorMessage>pole wymagane</ErrorMessage>}\r\n        <Button type=\"submit\">Zarejestruj się</Button>\r\n      </Form>\r\n      <LinkWrapper>\r\n        <Text>Masz już konto?</Text>\r\n        <StyledLink to={SIGNIN}>Zaloguj się</StyledLink>\r\n      </LinkWrapper>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nRegistration.propTypes = {};\r\n\r\nexport default Registration;\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PageWrapper = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  background-color: ${({ theme }) => theme.colors.mainColor};\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-size: ${({ theme }) => theme.fontSize.headers};\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const LinkWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 300;\r\n  margin: 0;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: 300;\r\n  color: ${({theme}) => theme.colors.active};\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport const ErrorMessage = styled.span`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: 300;\r\n  color: ${({ theme }) => theme.colors.red};\r\n`;\r\n\r\nexport const ServerErrorMessage = styled.div`\r\n  width: 70%;\r\n  background-color: ${({theme}) => theme.colors.red};\r\n  padding: 10px 0;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  font-size: ${({theme}) => theme.fontSize.s};\r\n`;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  PageWrapper,\r\n  Header,\r\n  Text,\r\n  StyledLink,\r\n  LinkWrapper,\r\n  ErrorMessage,\r\n  ServerErrorMessage,\r\n} from './Login.style';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport Form from 'components/organisms/Form/Form';\r\nimport { SIGNUP } from 'constants/routes';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from 'store/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { login } = useAuth();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await login(data.email, data.password);\r\n      history.push('/');\r\n    } catch {\r\n      setErrorMessage('Login lub hasło są niepoprawne :/');\r\n    }\r\n  };\r\n  return (\r\n    <PageWrapper>\r\n      <Header>Logowanie</Header>\r\n      {errorMessage && <ServerErrorMessage>{errorMessage}</ServerErrorMessage>}\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          placeholder=\"email\"\r\n          type=\"email\"\r\n          {...register('email', { required: true })}\r\n        />\r\n        {errors.email && <ErrorMessage>pole wymagane</ErrorMessage>}\r\n        <Input\r\n          placeholder=\"hasło\"\r\n          type=\"password\"\r\n          {...register('password', { required: true })}\r\n        />\r\n        {errors.password && <ErrorMessage>pole wymagane</ErrorMessage>}\r\n        <Button type=\"submit\">Zaloguj się</Button>\r\n      </Form>\r\n      <LinkWrapper>\r\n        <Text>Nie masz jeszcze konta?</Text>\r\n        <StyledLink to={SIGNUP}>Zarejestruj się</StyledLink>\r\n      </LinkWrapper>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useAuth } from 'store/AuthContext';\r\n\r\nconst Home = (props) => {\r\n  const { logout, currentUser } = useAuth();\r\n\r\n  return (\r\n    <div>\r\n      HOME\r\n      <button onClick={logout}>Wyloguj się</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from 'store/AuthContext';\r\nimport { SIGNIN } from 'constants/routes';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={SIGNIN} />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'assets/styles/theme';\nimport { GlobalStyle } from 'assets/styles/GlobalStyle';\nimport { AppWrapper } from './App.style';\nimport Registration from 'components/pages/Registration/Registration';\nimport Login from 'components/pages/Login/Login';\nimport Home from 'components/pages/Home/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { SIGNIN, SIGNUP, HOME } from 'constants/routes';\nimport { AuthProvider } from 'store/AuthContext';\nimport PrivateRoute from 'helpers/PrivateRoute';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router>\n        <AuthProvider>\n          <AppWrapper>\n            <Switch>\n              <PrivateRoute exact path={HOME} component={Home} />\n              <Route path={SIGNUP} component={Registration} />\n              <Route path={SIGNIN} component={Login} />\n            </Switch>\n          </AppWrapper>\n        </AuthProvider>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/pages/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}